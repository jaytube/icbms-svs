<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wz.modules.devicelog.dao.DeviceAlarmInfoLogDao">
	<resultMap type="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity"
		id="deviceAlarmInfoLogMap">
		<result property="id" column="id" />
		<result property="projectId" column="project_id" />
		<result property="deviceBoxId" column="device_box_id" />
		<result property="deviceBoxMac" column="device_box_mac" />
		<result property="node" column="node" />
		<result property="type" column="type" />
		<result property="recordTime" column="record_time" />
		<result property="info" column="info" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="createId" column="create_id" />
		<result property="updateId" column="update_id" />
		<result property="remark" column="remark" />
		
		<result property="alarmStatus" column="alarm_status" />
		<result property="alarmLevel" column="alarm_level" />
	</resultMap>

	<sql id="Base_Column_List">
		id,
		project_id,
		device_box_id,
		device_box_mac,
		node,
		type,
		record_time,
		info,
		create_time,
		update_time,
		create_id,
		update_id,
		remark,
		alarm_status,
		alarm_level
	</sql>

	<select id="queryObject"
		resultType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity"
		resultMap="deviceAlarmInfoLogMap">
		select
		d.id,
		d.project_id,
		d.device_box_id,
		d.device_box_mac,
		d.node,
		d.type,
		d.record_time,
		d.info,
		d.alarm_status, 
		d.alarm_level,
		d.create_time,
		d.update_time,
		d.create_id,
		d.update_id,
		d.remark,
		box.device_box_name,
		box.sec_box_gateway,
		box.stand_no,
		box.box_capacity,
		box.control_flag
		from device_alarm_info_log d
		inner join device_box_location b
		on d.device_box_id = b.device_box_id
		inner join device_box_info box
		on d.device_box_id = box.id
		
		where d.id = #{value}
	</select>

	<select id="queryList"
		resultType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity"
		resultMap="deviceAlarmInfoLogMap">
		select
		<include refid="Base_Column_List" />
		from device_alarm_info_log WHERE 1=1
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryDeviceAlarmList"
		resultType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity"
		resultMap="deviceAlarmInfoLogMap">
		select
		<include refid="Base_Column_List" />
		from device_alarm_info_log WHERE 1=1
		and device_box_id = #{deviceBoxId}
		order by create_time desc
		limit 10
	</select>

	<select id="queryListByBean"
		resultType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity"
		resultMap="deviceAlarmInfoLogMap">
		select
		<include refid="Base_Column_List" />
		from device_alarm_info_log
		WHERE 1=1
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from
		device_alarm_info_log
	</select>

	<select id="queryAppList"
		resultType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity"
		resultMap="deviceAlarmInfoLogMap">
		select
		d.id,
		d.project_id,
		d.device_box_id,
		d.device_box_mac,
		d.node,
		d.type,
		d.record_time,
		d.info,
		d.alarm_status, 
		d.alarm_level,
		d.create_time,
		d.update_time,
		d.create_id,
		d.update_id,
		d.remark,
		box.device_box_name,
		box.sec_box_gateway,
		box.stand_no,
		box.box_capacity,
		box.control_flag
		from device_alarm_info_log d
		inner join device_box_location b
		on d.device_box_id = b.device_box_id

		<if test="locationId != null and locationId.trim() != ''" >
			inner join (select getLocChild(#{locationId}) cnt from dual) ct	
		</if>
		left join device_box_info box
		on d.device_box_id = box.id
		and d.project_id = box.project_id
		WHERE 1=1 
		<if test="beginTime != null and beginTime.trim() != ''">
			AND d.record_time &gt;= #{beginTime}
		</if>
		<if test="endTime != null and endTime.trim() != ''">
			AND d.record_time &lt;= #{endTime}
		</if>
		<if test="projectId != null and projectId.trim() != ''" >
			AND d.project_id=#{projectId}
		</if>
		<if test="locationId != null and locationId.trim() != ''" >
			AND FIND_IN_SET(b.location_id, ct.cnt)
		</if>
		<if test="type != null and type.trim() != ''" >
			AND d.type=#{type}
		</if>
		<if test="deviceBoxMac != null and deviceBoxMac.trim() != ''" >
			AND d.device_box_mac like CONCAT('%', #{deviceBoxMac}, '%')
		</if>
		<if test="deviceBoxId != null and deviceBoxId.trim() != ''" >
			AND d.device_box_id=#{deviceBoxId}
		</if>
		
		<if test="alarmLevel != null and alarmLevel.trim() != ''">
			AND d.alarm_level = #{alarmLevel}
		</if>
		
		order by d.record_time desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryAppTotal" resultType="int">
		select count(1) 
		from device_alarm_info_log d
		inner join device_box_location b
		on d.device_box_id = b.device_box_id
		<if test="locationId != null and locationId.trim() != ''" >
			inner join (select getLocChild(#{locationId}) cnt from dual) ct	
		</if>
		 WHERE 1=1
		<if test="beginTime != null and beginTime.trim() != ''">
			AND record_time &gt;= #{beginTime}
		</if>
		<if test="endTime != null and endTime.trim() != ''">
			AND record_time &lt;= #{endTime}
		</if>
		<if test="projectId != null and projectId.trim() != ''" >
			AND d.project_id=#{projectId}
		</if>
		<if test="locationId != null and locationId.trim() != ''" >
			AND FIND_IN_SET(b.location_id, ct.cnt)
		</if>
		<if test="type != null and type.trim() != ''" >
			AND d.type=#{type}
		</if>
		<if test="deviceBoxMac != null and deviceBoxMac.trim() != ''" >
			AND d.device_box_mac like CONCAT('%', #{deviceBoxMac}, '%')
		</if>
		<if test="deviceBoxId != null and deviceBoxId.trim() != ''" >
			AND d.device_box_id=#{deviceBoxId}
		</if>
		
		<if test="alarmLevel != null and alarmLevel.trim() != ''">
			AND d.alarm_level = #{alarmLevel}
		</if>
	</select>

	<insert id="save"
		parameterType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity">
		insert into device_alarm_info_log
		(
		`id`,
		`project_id`,
		`device_box_id`,
		`device_box_mac`,		
		`node`,
		`type`,
		`record_time`,
		`info`,
		`create_time`,
		`update_time`,
		`create_id`,
		`update_id`,
		`remark`
		)
		values
		(
		#{id},
		#{projectId},
		#{deviceBoxId},
		#{deviceBoxMac},
		#{node},
		#{type},
		#{recordTime},
		#{info},
		#{createTime},
		#{updateTime},
		#{createId},
		#{updateId},
		#{remark}
		)
	</insert>

	<update id="update"
		parameterType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity">
		update device_alarm_info_log
		<set>
			<if test="projectId != null">`project_id` = #{projectId}, </if>
			<if test="deviceBoxId != null">`device_box_id` = #{deviceBoxId}, </if>
			<if test="deviceBoxMac != null">`device_box_mac` = #{deviceBoxMac}, </if>
			<if test="node != null">`node` = #{node}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="recordTime != null">`record_time` = #{recordTime}, </if>
			<if test="info != null">`info` = #{info}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="createId != null">`create_id` = #{createId}, </if>
			<if test="updateId != null">`update_id` = #{updateId}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete">
		delete from device_alarm_info_log where id = #{value}
	</delete>

	<delete id="deleteBatch">
		delete from device_alarm_info_log where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

	<select id="doFindDeviceAlarmIsExist"
		resultType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity"
		resultMap="deviceAlarmInfoLogMap">
		select
		<include refid="Base_Column_List" />
		from device_alarm_info_log
		WHERE 1=1 and device_box_id = #{deviceBoxId}
	</select>

	<select id="doStatDeviceAlarm"
		resultType="com.wz.modules.devicelog.entity.DeviceAlarmStatEntity">
		select type,count(*) as count from
		device_alarm_info_log 
		where 1=1 and alarm_status = '1'
		<if test="startDate != null and startDate.trim() != ''">
		    and left(record_time,10) &gt;= #{startDate}
		</if>
		
		<if test="projectId != null and projectId.trim() != ''">
		    and project_id = #{projectId}
		</if>
		group by type
	</select>
	
	<select id="doFindNewestDeviceAlarm"
		resultType="com.wz.modules.devicelog.entity.DeviceAlarmInfoLogEntity">
		select
		<include refid="Base_Column_List" />
		from device_alarm_info_log
		WHERE 1=1 and device_box_id = #{deviceBoxId}
		order by create_time desc 
		limit 1
	</select>
</mapper>